<tr>
    <td><button disabled="@DetalleVM.Editable" title="Eliminar detalle" @onclick="() => EliminarDetalle(DetalleVM.IdDetalleAjuste.ToString())" class="btn btn-sm btn-outline-danger"><i class="bi bi-trash3"></i></button></td>
    <td><input disabled @bind-value="DetalleVM.Articulo.Nombre" class="form-control" /></td>
    <td><input disabled="@DetalleVM.Editable" value="@DetalleVM.Cantidad" class="form-control" @onchange="handleChangeCantidad" /></td>
    <td><input disabled id="precioArticulo-@DetalleVM.IdDetalleAjuste" value="@DetalleVM.Costo" @onchange="handleChangePrecio" class="form-control" /></td>
    @*<td><input disabled="@DetalleVM.Editable" id="descuentoArticulo-@DetalleVM.IdDetalleAjuste" min="0" max="100" type="number" value="@ValorDescuento" @onchange="handleChangeValorDescuento" class="form-control" /></td>*@
    @*<td><input disabled="@DetalleVM.Editable" id="ivaArticulo-@DetalleVM.IdDetalleVenta" value="@DetalleVM.Iva" @onchange="handleChangeIva" class="form-control" /></td>*@
    <td><input disabled id="totalArticulo-@DetalleVM.IdDetalleAjuste" value="@DetalleVM.TotalDetalleAjuste" class="form-control" /></td>
</tr>


@code {
    [Parameter]
    public DetalleAjusteViewModel DetalleVM { get; set; }

    [Parameter]
    public bool SoloLectura { get; set; }

    [Parameter]
    public EventCallback<string> EliminarLinea { get; set; }

    [Parameter]
    public EventCallback CalcularTotales { get; set; }

    public int ValorDescuento { get; set; }

    private void handleChangeCantidad(ChangeEventArgs e)
    {
        DetalleVM.Cantidad = Convert.ToDecimal(e.Value as string);

        DetalleVM.TotalDetalleAjuste = DetalleVM.Cantidad * DetalleVM.Costo;
        CalcularTotales.InvokeAsync(false);
    }

    private void handleChangePrecio(ChangeEventArgs e)
    {
        DetalleVM.Costo = Convert.ToDecimal(e.Value as string);

        DetalleVM.TotalDetalleAjuste = DetalleVM.Cantidad * DetalleVM.Costo;
        CalcularTotales.InvokeAsync(false);
    }

    private void EliminarDetalle(string IdDetalle)
    {
        EliminarLinea.InvokeAsync(IdDetalle);
        CalcularTotales.InvokeAsync(false);
    }


}
